name: Build & Deploy to Cloud Run (WIF)

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  id-token: write

env:
  SERVICE_NAME: recommendacontractor
  IMAGE_NAME: recommendacontractor
  AR_REPO_ID: app-images

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Auth to Google Cloud using Workload Identity Federation
      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

- name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: recommendacontractor

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet

      # Create AR repo if it doesn't exist (safe to ignore error)
      - name: Ensure Artifact Registry repo exists
        run: |
          gcloud artifacts repositories create ${{ env.AR_REPO_ID }} \
            --repository-format=docker \
            --location=${{ secrets.GCP_REGION }} \
            --description="Docker images for recommendacontractor" || true

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.AR_REPO_ID }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=ref,event=branch
            type=raw,value=latest

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to Cloud Run
        run: |
          IMAGE="${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.AR_REPO_ID }}/${{ env.IMAGE_NAME }}:latest"
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "$IMAGE" \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --port 3000 \
            --cpu 1 --memory 512Mi \
            --max-instances 5 \
            --set-env-vars NODE_ENV=production \
            --set-env-vars DATABASE_URL='${{ secrets.PROD_DATABASE_URL }}' \
            --set-env-vars AUTH_SECRET='${{ secrets.PROD_AUTH_SECRET }}' \
            --set-env-vars GOOGLE_CLIENT_ID='${{ secrets.PROD_GOOGLE_CLIENT_ID }}' \
            --set-env-vars GOOGLE_CLIENT_SECRET='${{ secrets.PROD_GOOGLE_CLIENT_SECRET }}' \
            --set-env-vars FACEBOOK_CLIENT_ID='${{ secrets.PROD_FACEBOOK_CLIENT_ID }}' \
            --set-env-vars FACEBOOK_CLIENT_SECRET='${{ secrets.PROD_FACEBOOK_CLIENT_SECRET }}' \
            --set-env-vars NEXTAUTH_URL='${{ secrets.PROD_NEXTAUTH_URL }}' \
            --set-env-vars AUTH_URL='${{ secrets.PROD_AUTH_URL }}'

      - name: Show service URL
        run: gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ secrets.GCP_REGION }} --format='value(status.url)'
